- name: Register if config/private key already exists on target host
  stat:
    path: "{{ wireguard_remote_directory }}/{{ wg_interface.name }}.conf"
  register: wireguard__register_config_file
  tags:
    - wg-generate-keys


- name: WireGuard private key handling for new keys
  block:
    - name: Generate WireGuard private key
      command: "wg genkey"
      register: wireguard__register_private_key
      changed_when: false
      no_log: '{{ ansible_verbosity < 3 }}'
      tags:
        - wg-generate-keys

    - name: Set private key fact
      set_fact:
        wireguard_private_key: "{{ wireguard__register_private_key.stdout }}"
      no_log: '{{ ansible_verbosity < 3 }}'
      tags:
        - wg-generate-keys
  when:
    - not wireguard__register_config_file.stat.exists
    - wg_interface.private_key is not defined

- name: WireGuard private key handling for existing keys
  block:
    - name: Read WireGuard config file
      slurp:
        src: "{{ wireguard_remote_directory }}/{{ wg_interface.name }}.conf"
      register: wireguard__register_config
      no_log: '{{ ansible_verbosity < 3 }}'

    - name: Set private key fact
      set_fact:
        wireguard_private_key: "{{ wireguard__register_config['content'] | b64decode | regex_findall('PrivateKey = (.*)') | first }}"
      no_log: '{{ ansible_verbosity < 3 }}'
  when:
    - wireguard__register_config_file.stat.exists
    - wg_interface.private_key is not defined

- name: WireGuard private key handling for specified keys
  set_fact: 
    wireguard_private_key: "{{ wg_interface.private_key }}"
  when:
    - wg_interface.private_key is defined

- name: WireGuard PublicKey
  block:
    - name: Derive WireGuard public key
      command: "wg pubkey"
      args:
        stdin: "{{ wireguard_private_key }}"
      register: wireguard__register_public_key
      changed_when: false
      check_mode: false
      no_log: '{{ ansible_verbosity < 3 }}'

    - name: Set public key fact
      set_fact:
        wireguard__fact_public_key: "{{ wireguard__register_public_key.stdout }}"


- name: Set Interface Facts
  set_fact:
    interface_facts: |
      {
        "{{ wg_interface.name }}": {
          "config": {{ wireguard__register_config_file }},
          "private_key": "{{ wireguard_private_key }}",
          "public_key": "{{ wireguard__fact_public_key }}"
        }
      }


- name: DEBUG Interface Facts
  debug:
    var: interface_facts

- name: Merge Wireguard Facts
  set_fact:
    wireguard_facts: "{{ wireguard_facts | combine(interface_facts, recursive=true) }}"

- name: DEBUG Wireguard Facts
  debug:
    var: wireguard_facts

- name: Get Certain Interface Facts
  debug:
    msg: "{{ wireguard_facts[wg_interface.name].public_key }}"

- name: Create WireGuard configuration directory
  file:
    dest: "{{ wireguard_remote_directory }}"
    state: directory
    mode: 0700

